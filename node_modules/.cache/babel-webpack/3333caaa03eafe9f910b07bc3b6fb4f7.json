{"ast":null,"code":"import _asyncToGenerator from \"C:/source/OnlineBooks_Front/online-books-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { touchAllFormFields } from '../angular-helpers/validation';\nlet TopnavComponent = class TopnavComponent {\n  constructor(formBuilder, authUsecase, modalService) {\n    this.formBuilder = formBuilder;\n    this.authUsecase = authUsecase;\n    this.modalService = modalService;\n    this.closeResult = '';\n    this.headerMenu = '';\n    this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n\n  ngOnInit() {}\n\n  openModal(content) {\n    this.headerMenu = 'Login';\n    this.loginForm.reset();\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title'\n    }).result.then(result => {\n      this.closeResult = `Closed with: ${result}`;\n    }, reason => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.loginForm.valid) {\n        touchAllFormFields(_this.loginForm);\n        return;\n      }\n\n      _this.authUsecase.login(_this.loginForm.value);\n    })();\n  }\n\n  getDismissReason(reason) {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n};\nTopnavComponent = __decorate([Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.css']\n})], TopnavComponent);\nexport { TopnavComponent };","map":{"version":3,"sources":["C:\\source\\OnlineBooks_Front\\online-books-front\\src\\app\\topnav\\topnav.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AAEA,SAAS,mBAAT,QAA8C,4BAA9C;AACA,SAAS,kBAAT,QAAmC,+BAAnC;AASA,IAAa,eAAe,GAA5B,MAAa,eAAb,CAA4B;AAK1B,EAAA,WAAA,CACU,WADV,EAEU,WAFV,EAGU,YAHV,EAGgC;AAFtB,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,YAAA,GAAA,YAAA;AANV,SAAA,WAAA,GAAsB,EAAtB;AACA,SAAA,UAAA,GAAqB,EAArB;AAME,SAAK,SAAL,GAAiB,KAAK,WAAL,CAAiB,KAAjB,CAAuB;AACtC,MAAA,KAAK,EAAE,CAAC,EAAD,CAD+B;AAEtC,MAAA,QAAQ,EAAE,CAAC,EAAD;AAF4B,KAAvB,CAAjB;AAID;;AAED,EAAA,QAAQ,GAAA,CACP;;AAED,EAAA,SAAS,CAAC,OAAD,EAAa;AACpB,SAAK,UAAL,GAAkB,OAAlB;AACA,SAAK,SAAL,CAAe,KAAf;AACA,SAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,MAAA,cAAc,EAAE;AAAlB,KAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAsF,MAAD,IAAgB;AACnG,WAAK,WAAL,GAAmB,gBAAgB,MAAM,EAAzC;AACD,KAFD,EAEI,MAAD,IAAgB;AACjB,WAAK,WAAL,GAAmB,aAAa,KAAK,gBAAL,CAAsB,MAAtB,CAA6B,EAA7D;AACD,KAJD;AAKD;;AAED,EAAA,UAAU,GAAA;AACR,WAAO,CAAC,CAAC,YAAY,CAAC,OAAb,CAAqB,OAArB,CAAT;AACD;;AAEK,EAAA,KAAK,GAAA;AAAA;;AAAA;AACT,UAAI,CAAC,KAAI,CAAC,SAAL,CAAe,KAApB,EAA2B;AACzB,QAAA,kBAAkB,CAAC,KAAI,CAAC,SAAN,CAAlB;AACA;AACD;;AACD,MAAA,KAAI,CAAC,WAAL,CAAiB,KAAjB,CAAuB,KAAI,CAAC,SAAL,CAAe,KAAtC;AALS;AAMV;;AAEO,EAAA,gBAAgB,CAAC,MAAD,EAAY;AAClC,QAAI,MAAM,KAAK,mBAAmB,CAAC,GAAnC,EAAwC;AACtC,aAAO,iBAAP;AACD,KAFD,MAEO,IAAI,MAAM,KAAK,mBAAmB,CAAC,cAAnC,EAAmD;AACxD,aAAO,2BAAP;AACD,KAFM,MAEA;AACL,aAAO,SAAS,MAAM,EAAtB;AACD;AACF;;AAhDyB,CAA5B;AAAa,eAAe,GAAA,UAAA,CAAA,CAL3B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,YADD;AAET,EAAA,WAAW,EAAE,yBAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,wBAAD;AAHF,CAAD,CAKkB,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { touchAllFormFields } from '../angular-helpers/validation';\n\nimport { AuthUsecase } from '../auth/auth.usecase';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.css']\n})\nexport class TopnavComponent implements OnInit {\n  loginForm: FormGroup;\n  closeResult: string = '';\n  headerMenu: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authUsecase: AuthUsecase,\n    private modalService: NgbModal) { \n    this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  openModal(content: any) {\n    this.headerMenu = 'Login'\n    this.loginForm.reset();\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result: any) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason: any) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n\n  async login(): Promise<void> {\n    if (!this.loginForm.valid) {\n      touchAllFormFields(this.loginForm);\n      return;\n    }\n    this.authUsecase.login(this.loginForm.value);\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}